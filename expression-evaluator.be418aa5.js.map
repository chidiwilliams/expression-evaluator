{"version":3,"sources":["node_modules/canvas-confetti/dist/confetti.module.mjs","evaluator.js","index.js"],"names":["module","main","global","isWorker","workerSize","canUseWorker","Worker","Blob","Promise","OffscreenCanvas","OffscreenCanvasRenderingContext2D","HTMLCanvasElement","prototype","transferControlToOffscreen","URL","createObjectURL","noop","promise","func","ModulePromise","exports","Prom","raf","frame","cancel","TIME","frames","lastFrameTime","Math","floor","requestAnimationFrame","cancelAnimationFrame","cb","id","random","onFrame","time","setTimeout","timer","clearTimeout","getWorker","worker","prom","resolves","code","toString","join","e","undefined","console","warn","decorate","execute","options","callback","postMessage","init","canvas","offscreen","fire","size","done","slice","resolve","workerDone","msg","data","removeEventListener","addEventListener","bind","reset","defaults","particleCount","angle","spread","startVelocity","decay","gravity","ticks","x","y","shapes","zIndex","colors","disableForReducedMotion","scalar","prop","name","transform","convert","val","onlyPositiveInt","number","toDecimal","str","parseInt","colorsToRgb","map","hexToRgb","String","replace","length","r","substring","g","b","setCanvasWindowSize","width","document","documentElement","clientWidth","height","clientHeight","setCanvasRectSize","rect","getBoundingClientRect","animate","fettis","resizer","animatingFettis","animationFrame","destroy","context","getContext","onDone","clearRect","update","filter","fetti","updateFetti","cos","angle2D","velocity","sin","wobble","tiltAngle","tiltSin","tiltCos","wobbleX","wobbleY","progress","tick","totalTicks","x1","y1","x2","y2","fillStyle","color","beginPath","shape","ellipse","abs","ovalScalar","PI","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","save","translate","rotate","scale","arc","restore","moveTo","lineTo","closePath","fill","addFettis","concat","confettiCannon","globalOpts","isLibCanvas","animationObj","allowResize","globalDisableForReducedMotion","Boolean","initialized","__confetti_initialized","preferLessMotion","matchMedia","matches","fireLocal","temp","opts","radAngle","radSpread","min","max","Number","origin","getOrigin","Object","startX","startY","push","getCanvas","createElement","style","position","top","left","pointerEvents","body","appendChild","onResize","obj","resize","removeChild","useWorker","create","window","self","defaultEnvironment","E","environment","tokenize","input","scanner","tokens","char","test","digits","parseFloat","Error","toRPN","operators","out","i","token","shouldUnwindOperatorStack","pop","precedence","nextToken","lastOperator","evalRPN","rpn","stack","operate","value","apply","operator","a","pow","sqrt","ifFalse","ifTrue","predicate","key","evaluate","inputElement","querySelector","outputElement","envElement","runEvaluator","expression","result","evaluator","innerText","classList","remove","Infinity","runConfetti","error","add","envStr","entries","k","v","duration","animationEnd","Date","now","randomInRange","interval","setInterval","timeLeft","clearInterval","assign","event","target"],"mappings":"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","file":"expression-evaluator.be418aa5.js","sourceRoot":"..","sourcesContent":["// canvas-confetti v1.3.3 built on 2021-01-16T22:50:46.932Z\nvar module = {};\n\n// source content\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function colorsToRgb(colors) {\n    return colors.map(hexToRgb);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: Math.random() * Math.PI,\n      color: opts.color,\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      random: Math.random() + 5,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.wobble += 0.1;\n    fetti.velocity *= fetti.decay;\n    fetti.tiltAngle += 0.1;\n    fetti.tiltSin = Math.sin(fetti.tiltAngle);\n    fetti.tiltCos = Math.cos(fetti.tiltAngle);\n    fetti.random = Math.random() + 5;\n    fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n    fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n    context.beginPath();\n\n    if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var colors = prop(options, 'colors', colorsToRgb);\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            scalar: scalar\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          document.body.removeChild(canvas);\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize) {\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  module.exports = confettiCannon(null, { useWorker: true, resize: true });\n  module.exports.create = confettiCannon;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this || {};\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n","/**\n * ####### #     # ######  ######  #######  #####   #####  ### ####### #     #\n * #        #   #  #     # #     # #       #     # #     #  #  #     # ##    #\n * #         # #   #     # #     # #       #       #        #  #     # # #   #\n * #####      #    ######  ######  #####    #####   #####   #  #     # #  #  #\n * #         # #   #       #   #   #             #       #  #  #     # #   # #\n * #        #   #  #       #    #  #       #     # #     #  #  #     # #    ##\n * ####### #     # #       #     # #######  #####   #####  ### ####### #     #\n *\n * ####### #     #    #    #       #     #    #    ####### ####### ######\n * #       #     #   # #   #       #     #   # #      #    #     # #     #\n * #       #     #  #   #  #       #     #  #   #     #    #     # #     #\n * #####   #     # #     # #       #     # #     #    #    #     # ######\n * #        #   #  ####### #       #     # #######    #    #     # #   #\n * #         # #   #     # #       #     # #     #    #    #     # #    #\n * #######    #    #     # #######  #####  #     #    #    ####### #     #\n */\n\n// We'll set the default environment to contain a few handy math constants\nconst defaultEnvironment = {\n  PI: Math.PI,\n  E: Math.E,\n};\n\n// And then we'll initialize the current environment to the default\nlet environment = { ...defaultEnvironment };\n\n/**\n * Returns an array of tokens from the input expression string.\n */\nfunction tokenize(input) {\n  // First, we'll initialize a `scanner` index to track how much\n  // of the input string we've covered\n  let scanner = 0;\n\n  // We'll also need an array to put the tokens we find\n  const tokens = [];\n\n  // While we haven't reached the end of the input...\n  while (scanner < input.length) {\n    // Get the next character\n    const char = input[scanner];\n\n    // If the character is a number...\n    if (/[0-9]/.test(char)) {\n      // Create a string to hold all the digits in the number\n      let digits = '';\n\n      // While we have more digits (or a period) in the number and we haven't\n      // gotten to the end of the input...\n      while (scanner < input.length && /[0-9\\.]/.test(input[scanner])) {\n        // Collect all the digits\n        digits += input[scanner++];\n      }\n\n      // Convert the digits to a number and push the number to the array of tokens\n      const number = parseFloat(digits);\n      tokens.push(number);\n      continue;\n    }\n\n    // If the character is a symbol...\n    if (/[+\\-/*(),^<>=]/.test(char)) {\n      // Push it to the array of tokens\n      tokens.push(char);\n      scanner++;\n      continue;\n    }\n\n    // If the character is white space...\n    if (char === ' ') {\n      // Ignore it\n      scanner++;\n      continue;\n    }\n\n    // If the character is the first character of a name,\n    // like the name of a function or variable or variable pointer\n    if (/[A-Z$#]/.test(char)) {\n      // Create a string to hold all the characters in the name\n      let name = '';\n\n      // While we have more characters that make up the name and we haven't\n      // gotten to the end of the input...\n      while (scanner < input.length && /[A-Z$#]/.test(input[scanner])) {\n        // Collect all the characters in the name\n        name += input[scanner++];\n      }\n\n      // Then push the full name to the array of tokens\n      tokens.push(name);\n      continue;\n    }\n\n    // If we can't recognize the character, we'll throw an error\n    throw new Error(`Invalid token ${char} at position ${scanner}`);\n  }\n\n  // After collecting all the tokens in the expression, we'll return them\n  return tokens;\n}\n\n/**\n * Converts the tokens in infix notation to Reverse Polish notation\n */\nfunction toRPN(tokens) {\n  // First, we'll set up a stack to hold operators we're not yet ready to\n  // add to the final expression\n  const operators = [];\n\n  // ...and an array to hold the final RPN expression\n  const out = [];\n\n  // For each token in the infix expression...\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    // If the token is a number...\n    if (typeof token === 'number' || /^[$#]/.test(token)) {\n      // We'll push it to `out`\n      out.push(token);\n      continue;\n    }\n\n    // If the token is an operator or a function name...\n    if (/[+\\-/*<>=^A-Z]/.test(token)) {\n      // While there are operators in the `operators` stack with a higher\n      // precedence than the current token, we'll unwind them `operators` on to `out`\n      while (shouldUnwindOperatorStack(operators, token)) {\n        out.push(operators.pop());\n      }\n\n      // And then, push the current token to the `operators` stack\n      operators.push(token);\n      continue;\n    }\n\n    // If the token is a left parenthesis symbol...\n    if (token === '(') {\n      // We'll push it to the `operators` stack\n      operators.push(token);\n      continue;\n    }\n\n    // If the token is a right parenthesis symbol...\n    if (token === ')') {\n      // While there are operators in the `operators` stack, and we haven't reached the\n      // last left parenthesis symbol, we'll unwind them on to `out`\n      while (operators.length > 0 && operators[operators.length - 1] !== '(') {\n        out.push(operators.pop());\n      }\n\n      // We no longer need the left parenthesis symbol, so we'll discard it\n      operators.pop();\n      continue;\n    }\n\n    // If the token is a comma...\n    if (token === ',') {\n      // While there are operators in the `operators` stack, and we haven't reached the\n      // last left parenthesis symbol, we'll unwind them on to `out`\n      while (operators.length > 0 && operators[operators.length - 1] !== '(') {\n        out.push(operators.pop());\n      }\n      continue;\n    }\n\n    // If we can't recognize the token, we'll throw an error\n    throw new Error(`Invalid token ${token}`);\n  }\n\n  // Finally we'll unwind all the remaining operators on to `out`\n  for (let i = operators.length - 1; i >= 0; i--) {\n    out.push(operators[i]);\n  }\n\n  // And then return `out`\n  return out;\n}\n\n// BODMAS, PEMDAS\n// Exponentiation > [multiplication, division] > [addition, subtraction]\nconst precedence = {\n  '^': 3,\n  '*': 2,\n  '/': 2,\n  '+': 1,\n  '-': 1,\n};\n\n// Returns true if the topmost operator in the `operators` stack has a\n// precedence higher than or equal to the precedence of `nextToken`\nfunction shouldUnwindOperatorStack(operators, nextToken) {\n  if (operators.length === 0) {\n    return false;\n  }\n\n  const lastOperator = operators[operators.length - 1];\n  return /[A-Z]/.test(lastOperator) || (precedence[lastOperator] && precedence[lastOperator] >= precedence[nextToken]);\n}\n\n/**\n * Evaluates the RPN expression\n */\nfunction evalRPN(rpn) {\n  const stack = [];\n\n  // For each token in the RPN expression...\n  for (let i = 0; i < rpn.length; i++) {\n    const token = rpn[i];\n\n    // If the token is an operator...\n    if (/[+\\-/*^<>=]/.test(token)) {\n      // Operate on the stack and push the result back on to the stack\n      stack.push(operate(token, stack));\n      continue;\n    }\n\n    // If the token is a variable...\n    if (/^\\$/.test(token)) {\n      // We'll try to get its value from the environment (remember to skip the '$' character)\n      const value = environment[token.slice(1)];\n\n      // If the variable has not been set in the environment, we'll throw an error\n      if (value === undefined) {\n        throw new Error(`${token} is undefined`);\n      }\n\n      // But if it has, we'll push the value to the stack\n      stack.push(value);\n      continue;\n    }\n\n    // If the token is a function name...\n    if (/^[A-Z]/.test(token)) {\n      // Apply the function on the stack and push the result to the stack\n      stack.push(apply(token, stack));\n      continue;\n    }\n\n    // If the token is a number or a variable pointer, push it to the stack\n    if (typeof token === 'number' || /^\\#/.test(token)) {\n      stack.push(token);\n      continue;\n    }\n\n    // If we can't recognize the token, we'll throw an error\n    throw new Error(`Invalid token ${token}`);\n  }\n\n  // The value left on the stack is the final result of the evaluation\n  return stack.pop();\n}\n\n/**\n * Returns the result of appyling the mathematical operator on the stack.\n * The operator here is either an arithmetic or a logical operator, so we\n * only need two operands from the stack for any operator.\n */\nfunction operate(operator, stack) {\n  const b = stack.pop();\n  const a = stack.pop();\n\n  switch (operator) {\n    case '+':\n      return a + b;\n    case '-':\n      return a - b;\n    case '*':\n      return a * b;\n    case '/':\n      return a / b;\n    case '^':\n      return Math.pow(a, b);\n    case '<':\n      return a < b;\n    case '>':\n      return a > b;\n    case '=':\n      return a === b;\n    default:\n      throw new Error(`Invalid operator: ${operator}`);\n  }\n}\n\n/**\n * Returns the result of applying the function onto the stack.\n *\n * Functions may have any number of arguments. But each function must have a\n * definite number of arguments. i.e. X(a, b) and Y(a, b, c) are possible, but\n * X(a, b) and X(a, b, c) are not possible.\n *\n * The function arguments are in right-to-left order in the stack, i.e. the rightmost\n * argument is at the top of the stack, and so on.\n */\nfunction apply(func, stack) {\n  // MAX(a, b) returns the larger of a and b\n  if (func === 'MAX') {\n    const b = stack.pop();\n    const a = stack.pop();\n    return Math.max(a, b);\n  }\n\n  // SQRT(a) returns the square-root of a\n  if (func === 'SQRT') {\n    const a = stack.pop();\n    return Math.sqrt(a);\n  }\n\n  // IF(a, b, c) returns b if a is true. Else, it returns c\n  if (func === 'IF') {\n    const ifFalse = stack.pop();\n    const ifTrue = stack.pop();\n    const predicate = stack.pop();\n    return predicate ? ifTrue : ifFalse;\n  }\n\n  // SET(#a, b) sets the variable a to the value b\n  if (func === 'SET') {\n    const value = stack.pop();\n    const key = stack.pop();\n    environment[key.slice(1)] = value;\n    return value;\n  }\n\n  // If we can't recognize the function, we'll throw an error\n  throw new Error(`Undefined function: ${func}`);\n}\n\n/**\n * Finally, in the `evaluator` function, we'll link all stages\n * of the evaluation together.\n *\n * tokenize -> toRPN -> evalRPN\n */\nfunction evaluate(input) {\n  return evalRPN(toRPN(tokenize(input)));\n}\n\n/**\n * Resets the environment back to the default\n */\nfunction reset() {\n  environment = { ...defaultEnvironment };\n}\n\nmodule.exports = {\n  tokenize,\n  toRPN,\n  evalRPN,\n  evaluate,\n  reset,\n  environment,\n};\n","import confetti from 'canvas-confetti';\nimport * as evaluator from './evaluator';\n\nconst inputElement = document.querySelector('#input');\nconst outputElement = document.querySelector('#output');\nconst envElement = document.querySelector('#env');\n\ninputElement.addEventListener('input', (event) => {\n  runEvaluator(event.target.value);\n});\n\nfunction runEvaluator(expression) {\n  try {\n    const result = evaluator.evaluate(expression);\n    outputElement.innerText = result ?? '';\n    outputElement.classList.remove('error');\n\n    if (result === Infinity) {\n      runConfetti();\n    }\n  } catch (error) {\n    outputElement.innerText = error;\n    outputElement.classList.add('error');\n  }\n\n  const envStr = Object.entries(evaluator.environment)\n    .map(([k, v]) => `${k}=${v}`)\n    .join(', ');\n\n  envElement.innerText = envStr;\n}\n\n// https://www.kirilv.com/canvas-confetti/#fireworks\nfunction runConfetti() {\n  const duration = 5 * 1000;\n  const animationEnd = Date.now() + duration;\n  const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\n\n  function randomInRange(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  const interval = setInterval(function () {\n    const timeLeft = animationEnd - Date.now();\n\n    if (timeLeft <= 0) {\n      return clearInterval(interval);\n    }\n\n    const particleCount = 50 * (timeLeft / duration);\n    confetti(\n      Object.assign({}, defaults, {\n        particleCount,\n        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },\n      }),\n    );\n    confetti(\n      Object.assign({}, defaults, {\n        particleCount,\n        origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },\n      }),\n    );\n  }, 250);\n}\n\nrunEvaluator(inputElement.value);\n"]}